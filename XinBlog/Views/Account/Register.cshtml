@model XinBlog.Models.RegisterViewModel

@{
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
    ViewBag.Title = "注册";
}
<div class="ember-view">
    <div class="ember-view gh-app">
        <a class="ember-view sr-only sr-only-focusable" href="javascript:;">Skip to main content</a>
        <aside class="ember-view gh-alerts"></aside>
        <div class="gh-viewport   ">
            <main class="ember-view gh-main" role="main">
                <div class="gh-flow">
                    <div class="gh-flow-content-wrap">
                        <section class="gh-flow-content">
                            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "gh-signin", role = "form", novalidate = "novalidate" }))
                            {
                                <label style="width:100%;text-align:center;padding-bottom:28px"><h4>欢迎使用信博客系统</h4></label>

                                    @Html.AntiForgeryToken()
                                    <div class="ember-view form-group success">
                                        <span class="input-icon icon-mail">
                                            @Html.TextBoxFor(m => m.Email, new { @class = "gh-input email ember-view ember-text-field gh-input" })
                                        </span>
                                    </div>
                                    <div class="ember-view form-group">
                                        <span class="input-icon icon-lock">
                                            @*<input name="password" tabindex="2" class="password ember-view ember-text-field gh-input"  type="password" placeholder="密码" autocorrect="off">*@
                                            @Html.PasswordFor(m => m.Password, new { @class = "password ember-view ember-text-field gh-input" })
                                        </span>
                                    </div>
                                    <div class="ember-view form-group">
                                        <span class="input-icon icon-lock">
                                            @*<input name="password" tabindex="2" class="password ember-view ember-text-field gh-input" type="password" placeholder="密码" autocorrect="off">*@
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "password ember-view ember-text-field gh-input" })
                                        </span>
                                    </div>
                                    <button tabindex="3" class="login btn btn-blue btn-block ember-view" type="submit">
                                        注册
                                    </button>
                            }
                            <p class="main-error">
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </p>
                        </section>
                    </div>
                </div>
            </main>
            <aside class="ember-view gh-notifications"> </aside>
            <div class="ember-view content-cover"> </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




